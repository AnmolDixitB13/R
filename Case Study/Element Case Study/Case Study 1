# A simple case study on first 36 elements of the Periodic Table [Modern Periodic Table]. The parameters included in the  dataset (csv file) w.r.t.
these 36 elements considered include:
1. Valency
2. Atomic Number
3. Atomic Weight
4. Block
5. Inert Status
6. Ionization Energy

Here are the questions on the dataset/elements mentioned in the dataset whose answers were found out using R programming.

1. Find the maximum atomic number present in the dataset file. Also, find out the name of this element that has the highest
atomic number in the given list of elements.

Code:

data <- read.csv('element_database.csv')

max_at_no <- max(data$Atomic_Number)
print(paste0("Maximum atomic number in the list: ", max_at_no))

# print(subset(data, data$Atomic_Number == max_at_no))
# this gives/fetches all the details of the element with highest atomic no

print(paste0("Name of the element with highest atomic number: ", subset(data$Element, data$Atomic_Number == max_at_no)))
# this query fetches only the name of the element with the highest atomic number and not other details of the elememt

O/P:

[1] "Maximum atomic number in the list: 36"
[1] "Name of the element with highest atomic number: Krypton"

_________________________________________________________________________________________________________

2. Find the Ionization Enthalpy of the elements with the highest & lowest atomic numbers in the given dataset.

Code:

data <- read.csv('element_database.csv')

max_at_no <- max(data$Atomic_Number)
min_at_no <- min(data$Atomic_Number)

ans1 <- subset(data, data$Atomic_Number == max_at_no, select = c(Element, Atomic_Number, Ionization_Energy))
ans2 <- subset(data, data$Atomic_Number == min_at_no, select = c(Element, Atomic_Number, Ionization_Energy))

print(ans1)
print("---------------------------------------------------------")
print(ans2)

O/P:

   Element Atomic_Number Ionization_Energy
36 Krypton            36           13.9996
[1] "---------------------------------------------------------"
   Element Atomic_Number Ionization_Energy
1 Hydrogen             1           13.5984

_________________________________________________________________________________________________________

3. Find the Ionization Enthalpies of the elements whose atomic weights are in range [20, 40], including values 20 & 40.

Code:

data <- read.csv('element_database.csv')

# filtered_data <- subset(data$Ionization_Energy, data$Atomic_Weight >= 20 & data$Atomic_Weight <= 40)
# print(filtered_data)
# works fine

temp <- subset(data, Atomic_Weight >= 20 & Atomic_Weight <= 40, select = c(Element, Ionization_Energy, Atomic_Weight))
print(temp)
# this also works fine

# Observations:

# This selects ionization enthalpies along with the element names & their atomic numbers.
# Code works even with writing Atomic_Number instead of writing data$Atomic_Number in subset() because in subset(), 
# we have specified the 1st parameter in the subset(), which is the source from where data has to be considered/ source 
# from where data has to be filtered

# the order in which columns are specified in the select parameter of subset, the columns in o/p will be 
# displayed in the same order, as specified in the select parameter of the subset

O/P:

       Element Ionization_Energy Atomic_Weight
10        Neon           21.5646          20.2
11      Sodium            5.1390          23.0
12   Magnesium            7.6462          24.3
13    Aluminum            5.9857          27.0
14     Silicon            8.1516          28.1
15 Phosphorous           10.4866          31.0
16     Sulphur           10.3600          32.1
17    Chlorine           12.9676          35.5
18       Argon           15.7596          39.9
19   Potassium            4.3406          39.1

_________________________________________________________________________________________________________

4. Find out the ionization enthalpies of the elements whose 
i. atomic weights are in range [20, 40], including the values 20 & 40
ii. the elements are inert

Code:

data <- read.csv('element_database.csv')

filtered_data <- subset(data, data$Atomic_Weight >= 20 & data$Atomic_Weight <= 40 & data$Inert_Status=='Inert', select = c(Element, Ionization_Energy, Atomic_Weight))
print(filtered_data)

O/P:

   Element Ionization_Energy Atomic_Weight
10    Neon           21.5646          20.2
18   Argon           15.7596          39.9
_________________________________________________________________________________________________________

5. Find out the ionization enthalpies of the elements whose 
i. atomic weights are in range [40, 50], including the values 40 & 50
ii. the elements belong to d block

Code:

# steps
# 1st method
# 1st filter data from the given dataset file and get all the d block elements in a separate variable
# filter this data such that we only consider the elements whose atomic weights are in range [40, 50]

# alternate method / 2nd method = 1st filter all elements whose at. wt lie between [40, 50]
# & then select the ones who belong to d block

# --------------------------------------------------------------------------
# 1st method solution

data <- read.csv('element_database.csv')

filtered_data <- subset(data, data$Block == 'd')
# print(filtered_data)

final_data <- subset(filtered_data, Atomic_Weight >= 40 & Atomic_Weight <= 50, select = c(Element, Atomic_Weight, Ionization_Energy))
print(final_data)

O/P:

    Element Atomic_Weight Ionization_Energy
21 Scandium          45.0            6.5615
22 Titanium          47.8            6.8281
_________________________________________________________________________________________________________

6. Find the ionization energy and the name of the element which has highest ionization energy in the 
i. d block 
ii. it's atomic weight lies between [50, 60] units

Code:

data <- read.csv('element_database.csv')

filtered_data <- subset(data, Atomic_Weight >= 50 & Atomic_Weight <= 60 & Block == 'd', select = c(Element, Atomic_Weight, Block, Ionization_Energy))
#print(filtered_data)

final_data <- subset(filtered_data, Ionization_Energy == max(Ionization_Energy), select = c(Element, Atomic_Weight, Ionization_Energy))
print(final_data)

O/P:

   Element Atomic_Weight Ionization_Energy
26    Iron          55.8            7.9024

_________________________________________________________________________________________________________

7. Find out the element that has the highest and the lowest ionization energy amongst the elements present 
in the dataset file. Also, find out its atomic number.

Code:

data <- read.csv('element_database.csv')

filtered_data <- subset(data, data$Ionization_Energy == max(data$Ionization_Energy), select = c(Element, Ionization_Energy, Atomic_Number))
print(filtered_data)

# Just replace max by min to get the details of the element with the lowest ionization enthalpy in the list of elements
# present in the dataset

O/P:

  Element Ionization_Energy Atomic_Number
2  Helium           24.5874             2

_________________________________________________________________________________________________________

8. Find out the element that has the highest & the lowest ionization enthalpy in the d block & also find it's atomic 
number.

Code:

# steps
# 1st filter all elements, select only d block ones
# then apply subset on this filtered data

data <- read.csv('element_database.csv')

filtered_data <- subset(data, data$Block == "d", select = c(Element, Ionization_Energy, Block, Atomic_Number))
print(filtered_data)

final_data <- subset(filtered_data, filtered_data$Ionization_Energy == max(filtered_data$Ionization_Energy))
print(final_data)

final_data2 <- subset(filtered_data, filtered_data$Ionization_Energy == min(filtered_data$Ionization_Energy))
print(final_data2)

# Observations
# write filtered_data$Ionization_Energy == max(filtered_data$Ionization_Energy) in subset()
# writing only max(filtered_data$Ionization_Energy) in subset() throws error: subset must be logical

O/P:

     Element Ionization_Energy Block Atomic_Number
21  Scandium            6.5615     d            21
22  Titanium            6.8281     d            22
23  Vanadium            6.7462     d            23
24  Chromium            6.7665     d            24
25 Manganese            7.4340     d            25
26      Iron            7.9024     d            26
27    Cobalt            7.6398     d            27
28    Nickel            7.8810     d            28
29    Copper            7.7263     d            29
30      Zinc            9.3942     d            30
   Element Ionization_Energy Block Atomic_Number
30    Zinc            9.3942     d            30
    Element Ionization_Energy Block Atomic_Number
21 Scandium            6.5615     d            21

_________________________________________________________________________________________________________

9. Find the element that has highest ionization enthalpy amongst the p block elements present in the dataset file, in
both the categories - inert & non inert.

Code:

data <- read.csv('element_database.csv')
#print(data)

filtered_data_p <- subset(data, data$Block == 'p')
#print(filtered_data_p)

filtered_data_p_non_inert <- subset(filtered_data_p, Inert_Status == "Non inert", select = c(Element, Block, Ionization_Energy, Inert_Status))
#print(filtered_data_p_non_inert)

filtered_data_p_inert <- subset(filtered_data_p, Inert_Status == "Inert", select = c(Element, Block, Ionization_Energy, Inert_Status))
#print(filtered_data_p_inert)

#print("___________________________________________________________________")

ans1 <- subset(filtered_data_p_inert, Ionization_Energy == max(Ionization_Energy), select = c(Element, Block, Ionization_Energy, Inert_Status))

ans2 <- subset(filtered_data_p_non_inert, Ionization_Energy == max(Ionization_Energy), select = c(Element, Block, Ionization_Energy, Inert_Status))

print(ans1)
print("------------------------------------------------------------------")
print(ans2)


O/P:

  Element Block Ionization_Energy Inert_Status
2  Helium     p           24.5874        Inert
[1] "------------------------------------------------------------------"
   Element Block Ionization_Energy Inert_Status
9 Fluorine     p           17.4228    Non inert

_________________________________________________________________________________________________________

10. Arrange the d block elements present in the dataset file in the decreasing order of their ionization enthalpies.

Code:

data <- read.csv('element_database.csv')

filtered_data <- subset(data, data$Block == 'd', select = c(Element, Block, Ionization_Energy))
#print(filtered_data)

# final_data <- filtered_data$Ionization_Energy[order(filtered_data$Ionization_Energy, decreasing = TRUE)]
# print(final_data)
# working fine

df <- data.frame(filtered_data)
#print(df)

#final_data <- df[order(df$Ionization_Energy, decreasing = TRUE), ]
final_data <- filtered_data[order(filtered_data$Ionization_Energy, decreasing = TRUE), ]
print(final_data)
# both the methods work - with and without dataframes
# an extra comma ',' is needed at the end, when dealing with order() as shown, else the desired O/P is not produced

O/P:

     Element Block Ionization_Energy
30      Zinc     d            9.3942
26      Iron     d            7.9024
28    Nickel     d            7.8810
29    Copper     d            7.7263
27    Cobalt     d            7.6398
25 Manganese     d            7.4340
22  Titanium     d            6.8281
24  Chromium     d            6.7665
23  Vanadium     d            6.7462
21  Scandium     d            6.5615

